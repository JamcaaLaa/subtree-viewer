{"version":3,"file":"index.1dac600b.js","sources":["../../vite/modulepreload-polyfill","../../src/parse-subtreefile.ts","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const getStringFromArrayBuffer = (buffer: ArrayBuffer, start: number = 0, length: number = -1) => {\r\n  if (length === -1) {\r\n    length = buffer.byteLength\r\n  }\r\n  const strArr: string[] = []\r\n  const slice = buffer.slice(start, start + length)\r\n  const u32Arr = new Uint8Array(slice)\r\n  const u32Length = u32Arr.length\r\n  for (let i = 0; i < u32Length; i++) {\r\n    strArr.push(String.fromCharCode(u32Arr[i]))\r\n  }\r\n  return strArr.join('')\r\n}\r\n\r\nconst getUint64 = (dv: DataView, byteOffset: number, littleEndian: boolean = true) => {\r\n  const left = dv.getUint32(byteOffset, littleEndian)\r\n  const right = dv.getUint32(byteOffset + 4, littleEndian)\r\n  const combined = littleEndian ? left + 2 ** 32 * right : 2 ** 32 * left + right\r\n\r\n  if (!Number.isSafeInteger(combined))\r\n    console.warn(combined, 'exceeds MAX_SAFE_INTEGER. Precision may be lost')\r\n\r\n  return combined;\r\n}\r\n\r\nexport const parseSubtreeFile = (buffer: ArrayBuffer) => {\r\n  const dv = new DataView(buffer)\r\n  const headerInfo = {\r\n    magic: getStringFromArrayBuffer(buffer, 0, 4),\r\n    version: dv.getUint32(4, true), // 默认是使用大端序的，但是数据是使用的小端序\r\n    jsonByteLength: getUint64(dv, 8),\r\n    binaryByteLength: getUint64(dv, 16),\r\n  }\r\n\r\n  const jsonStr = getStringFromArrayBuffer(buffer, 24, headerInfo.jsonByteLength)\r\n  const subtreeHeaderJson = JSON.parse(jsonStr)\r\n  return {\r\n    headerInfo,\r\n    subtreeHeaderJson\r\n  }\r\n}","import './main.css'\r\nimport classes from './main.module.css'\r\nimport {\r\n  parseSubtreeFile\r\n} from './parse-subtreefile'\r\n\r\nconst appDiv = document.querySelector('#app')\r\n\r\nconst onFileChange = async (inputElement: HTMLInputElement, cb: (subtreeMeta: SubtreeMeta) => void) => {\r\n  const files = inputElement.files\r\n  if (files?.length !== 1) {\r\n    return\r\n  }\r\n\r\n  const file = files.item(0)\r\n  if (!file) {\r\n    return\r\n  }\r\n\r\n  const buffer = await file.arrayBuffer()\r\n  const subtreeMeta = parseSubtreeFile(buffer)\r\n  cb(subtreeMeta)\r\n}\r\n\r\ntype SubtreeMeta = {\r\n  headerInfo: {\r\n    magic: string,\r\n    version: number,\r\n    jsonByteLength: number,\r\n    binaryByteLength: number,\r\n  },\r\n  subtreeHeaderJson: any\r\n}\r\n\r\nif (appDiv) {\r\n  const inputElement = document.createElement<\"input\">('input')\r\n  inputElement.type = 'file'\r\n  inputElement.id = 'file-input'\r\n  inputElement.accept = '.subtree'\r\n  inputElement.classList.add(classes.inputEle)\r\n\r\n  const infoDiv = document.createElement('div')\r\n  infoDiv.classList.add(classes.info)\r\n\r\n  const callback = (subtreeMeta: SubtreeMeta) => {\r\n    infoDiv.innerHTML = /* html */`\r\n    <div class=${classes.headerFields}>\r\n      <div class=${classes.fieldItem}>\r\n        <span class=${classes.fieldName}>magic</span><span class=${classes.fieldValue}>${subtreeMeta.headerInfo.magic}</span>\r\n      </div>\r\n      <div class=${classes.fieldItem}>\r\n        <span class=${classes.fieldName}>version</span><span class=${classes.fieldValue}>${subtreeMeta.headerInfo.version}</span>\r\n      </div>\r\n      <div class=${classes.fieldItem}>\r\n        <span class=${classes.fieldName}>jsonByteLength</span><span class=${classes.fieldValue}>${subtreeMeta.headerInfo.jsonByteLength}</span>\r\n      </div>\r\n      <div class=${classes.fieldItem}>\r\n        <span class=${classes.fieldName}>binaryByteLength</span><span class=${classes.fieldValue}>${subtreeMeta.headerInfo.binaryByteLength}</span>\r\n      </div>\r\n    </div>\r\n    <pre class=${classes.jsonTextArea}>${JSON.stringify(subtreeMeta.subtreeHeaderJson, null, 2)}</pre>\r\n    `\r\n  }\r\n\r\n  inputElement.addEventListener('drop', () => {\r\n    onFileChange(inputElement, callback)\r\n  })\r\n  inputElement.addEventListener('change', () => {\r\n    onFileChange(inputElement, callback)\r\n  })\r\n  appDiv.appendChild(inputElement)\r\n  appDiv.appendChild(infoDiv)\r\n}"],"names":[],"mappings":"AAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,wRC1CtB,KAAM,GAA2B,CAAC,EAAqB,EAAgB,EAAG,EAAiB,KAAO,CAC5F,IAAW,OACJ,EAAO,iBAEZ,GAAmB,GACnB,EAAQ,EAAO,MAAM,EAAO,EAAQ,GACpC,EAAS,GAAI,YAAW,GACxB,EAAY,EAAO,cAChB,GAAI,EAAG,EAAI,EAAW,MACtB,KAAK,OAAO,aAAa,EAAO,WAElC,GAAO,KAAK,KAGf,EAAY,CAAC,EAAc,EAAoB,EAAwB,KAAS,MAC9E,GAAO,EAAG,UAAU,EAAY,GAChC,EAAQ,EAAG,UAAU,EAAa,EAAG,GACrC,EAAW,EAAe,EAAO,GAAK,GAAK,EAAQ,GAAK,GAAK,EAAO,QAErE,QAAO,cAAc,YAChB,KAAK,EAAU,mDAElB,GAGI,EAAmB,AAAC,GAAwB,MACjD,GAAK,GAAI,UAAS,GAClB,EAAa,CACjB,MAAO,EAAyB,EAAQ,EAAG,GAC3C,QAAS,EAAG,UAAU,EAAG,IACzB,eAAgB,EAAU,EAAI,GAC9B,iBAAkB,EAAU,EAAI,KAG5B,EAAU,EAAyB,EAAQ,GAAI,EAAW,gBAC1D,EAAoB,KAAK,MAAM,SAC9B,CACL,aACA,sBChCE,EAAS,SAAS,cAAc,QAEhC,EAAe,MAAO,EAAgC,IAA2C,MAC/F,GAAQ,EAAa,SACvB,kBAAO,UAAW,cAIhB,GAAO,EAAM,KAAK,MACpB,CAAC,cAIC,GAAS,KAAM,GAAK,cACpB,EAAc,EAAiB,KAClC,IAaL,GAAI,EAAQ,MACJ,GAAe,SAAS,cAAuB,WACxC,KAAO,SACP,GAAK,eACL,OAAS,aACT,UAAU,IAAI,EAAQ,eAE7B,GAAU,SAAS,cAAc,SAC/B,UAAU,IAAI,EAAQ,WAExB,GAAW,AAAC,GAA6B,GACrC,UAAsB;AAAA,iBACjB,EAAQ;AAAA,mBACN,EAAQ;AAAA,sBACL,EAAQ,qCAAqC,EAAQ,cAAc,EAAY,WAAW;AAAA;AAAA,mBAE7F,EAAQ;AAAA,sBACL,EAAQ,uCAAuC,EAAQ,cAAc,EAAY,WAAW;AAAA;AAAA,mBAE/F,EAAQ;AAAA,sBACL,EAAQ,8CAA8C,EAAQ,cAAc,EAAY,WAAW;AAAA;AAAA,mBAEtG,EAAQ;AAAA,sBACL,EAAQ,gDAAgD,EAAQ,cAAc,EAAY,WAAW;AAAA;AAAA;AAAA,iBAG1G,EAAQ,gBAAgB,KAAK,UAAU,EAAY,kBAAmB,KAAM;AAAA,SAI9E,iBAAiB,OAAQ,IAAM,GAC7B,EAAc,OAEhB,iBAAiB,SAAU,IAAM,GAC/B,EAAc,OAEtB,YAAY,KACZ,YAAY"}